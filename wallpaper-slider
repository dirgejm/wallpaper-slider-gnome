#!/bin/bash

# script to setup wallpaper-slider, user can enter the path to their wallpaper directory and a delay
function get_path {
    FORMAT=/path/to/your/wallpapers/WALLPAPERS/
    PATH_PATTERN="^/.*$"
    echo Enter path to wallpapers folder: $FORMAT
    read path
    if [[ $path =~ $PATH_PATTERN ]]; then
        echo Path to wallpapers: $path
        echo $path | cat > $HOME/wallpaper-slider-gnome/data/path.txt
        return
    else
        echo Invalid. Enter in format $FORMAT
        get_path
    fi
}

function enter_delay {
    FORMAT="Format: '5m' (5 minutes) | '8h' (8 hours) | '1d' (1 day)"
    echo "Enter time delay [$FORMAT]:"
    read delay

    delay_length=${#delay}

    # checks $delay contains only integers apart from last char
    for ((i = 0; i < delay_length - 1; i++)); do
        char="${delay:i:1}"
        if ! [[ "$char" =~ [0-9] ]]; then
            echo Invalid. $FORMAT
            enter_delay
        fi
    done

    # writes the entered delay into txt file to be used by wallpaper_slid.py
    # PATHS NEED TO BE CHANGED TO REFLECT THOSE IN HOME DIRECTORY
    if [[ "$delay" == *m ]]; then
        echo Wallpaper change delay: ${delay%?} minutes
        echo $delay | cat > $HOME/wallpaper-slider-gnome/data/delay.txt
        return
    elif [[ "$delay" == *h ]]; then
        echo Wallpaper change delay: ${delay%?} hours
        echo $delay | cat > $HOME/wallpaper-slider-gnome/data/delay.txt
        return
    elif [[ "$delay" == *d ]]; then
        echo Wallpaper change delay: ${delay%?} days
        echo $delay | cat > $HOME/wallpaper-slider-gnome/data/delay.txt
        return
    else
        echo Invalid. $FORMAT
    fi
}

function print_version {
    echo
    echo "-------------------------------------------------------------------------------"
    echo
    echo wallpaper_slider version: $(<$HOME/wallpaper-slider-gnome/data/version.txt)
    echo
    echo "-------------------------------------------------------------------------------"
    echo
}

function print_entered_info {
    delay=$(<$HOME/wallpaper-slider-gnome/data/delay.txt)
    echo Wallpaper folder path:
    echo $(<$HOME/wallpaper-slider-gnome/data/path.txt)
    echo Wallpaper change delay:

    if [[ $delay == *m ]]; then
        echo ${delay%?} minutes
    elif [[ $delay == *h ]]; then
        echo ${delay%?} hours
    elif [[ $delay == *d ]]; then
        echo ${delay%?} days
    fi
}

function help {
    echo
    echo "Options:"
    echo "-p     Enter path to wallpapers directory"
    echo "-d     Enter time delay between wallpaper changes in Seconds/Minutes/Hours/Days"
    echo "-v     Print software version"
    echo "-i     Print user's settings"
    echo "-r     Run wallpaper-slider python program if it is not running already"
    echo "-s     Stop running wallpaper-slider python program"
    echo "-h     Print this help"
    echo
}

if [[ $# -eq 0 ]]; then
    echo "wallpaper-slider: try -h for help"
    exit 1
fi

# add option for manually starting the program and halting it, also removing the crontab entry
while getopts "p d v i r s h" option; do
    case $option in
        p)  # user enters absolute path to wallpapers
            get_path
            exit
            ;;
        
        d)  # user enters time delay
            enter_delay
            exit
            ;;
        
        v)  # displays software version
            print_version
            exit
            ;;
        
        i)  # displays current settings - path, delay
            print_entered_info
            exit
            ;;

        r)  # runs the program and sets it to run on startup
            echo wallpaper-slider: setting to run on startup...
            python /usr/bin/wallpaper_slider.py &
            (crontab -l 2>/dev/null; echo "@reboot python /usr/bin/wallpaper_slider.py &") | crontab -
            exit
            ;;

        s)  # stops running the program
            echo wallpaper-slider: stopping wallpaper-slider python script...
            kill $(pgrep -f 'python /usr/bin/wallpaper_slider.py')
            exit
            ;;

        h) # display help
            help
            exit
            ;;
        
        *) # if unknown, exits
            echo "wallpaper-slideshow: wrong invocation, try -h for options."
            exit
            ;;
    esac
done